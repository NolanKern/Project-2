{
    "seq_constructor": [
        {
            "path": "/config",
            "type": ".js",
            "name": "connection",
            "append content": "var mysql = require('mysql');\r\nvar connection = mysql.createConnection({\r\nhost: 'localhost',\r\nuser: 'root',\r\npassword: '',\r\ndatabase: '',\r\n});\r\nconnection.connect(function(err) {\r\n if(err) throw err;\r\nconsole.log('connected as id ' + connection.threadId);\r\n});\r\nmodule.exports = connection;",
            "functionpkg":"nondir"
        },
        {
            "path": "/config",
            "type": ".js",
            "name": "orm",
            "append content":"var connection = require('./connection');\r\nvar orm = {\r\n\r\n};\r\nmodule.exports = orm;",
            "functionpkg":"nondir"
        },
        {
            "path": "/",
            "type": "dir",
            "name": "controllers",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/controllers",
            "type": ".js",
            "name": "userProjectName_controller",
            "append content":"var express = require('express');\r\nvar router = express.Router();\r\nvar userConstructor = require('../models/userConstructor');\r\n",
            "get":"router.get('/userTarget',function(req, res) {\r\n});",
            "post":"router.post('/userTarget, function(req, res) {\r\nres.redirect('/');\r\n});",
            "put":"router.put('/userTarget', function(req, res) {\r\nres.json('/');});",
            "functionpkg":"nondir"
        },
        {
            "path": "/",
            "type": "dir",
            "name": "db",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/skeleton/db",
            "type": ".sql",
            "name": "schema",
            "append content":"CREATE DATABASE IF NOT EXISTS user_db;\r\nUSE user_db;\r\nDROP TABLE IF EXISTS userTable;\r\nCREATE TABLE burgers (\r\nid int NOT NULL AUTO_INCREMENT,\r\nUser Variables\r\n PRIMARY KEY (id));",
            "functionpkg":"nondir"
        },
        {
            "path": "/skeleton/db",
            "type": ".sql",
            "name": "seeds",
            "append content":"INSERT INTO userTable (userVariables, ) VALUES (userInsert, )",
            "functionpkg":"nondir"
        },
        {
            "path": "/models",
            "type": ".js",
            "name": "userProjectName",
            "append content":"var orm = require('../config/orm');\r\n var userModel = {\r\n\r\n};\r\nmodule.exports = userModel;",
            "functionpkg":"nondir"
        },
        {
            "path": "/",
            "type": "dir",
            "name": "public",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/public",
            "type": ".html",
            "name": "test",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path": "/public",
            "type": "dir",
            "name": "assets",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/public/assets",
            "type": "dir",
            "name": "css",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/public/assets/css",
            "type": ".css",
            "name": "style",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path": "/public/assets",
            "type": "dir",
            "name": "img",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/public/assets",
            "type": "dir",
            "name": "js",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/",
            "type": ".js",
            "name": "server",
            "append content":"var express = require('express');\r\nvar bodyParser = require('body-parser');\r\nvar path = require('path');\r\nvar app = express();\r\napp.use(express.static('public'));\r\napp.use(bodyParser.urlencoded({extended: false}));\r\nvar exphbs = require('express-handlebars');\r\napp.engine('handlebars', exphbs({defaultLayout: 'main'}));\r\napp.set('view engine', 'handlebars');\r\nvar routes =require('./controllers/userTargetName_controller');\r\napp.use(routes);\r\nvar PORT = process.env.PORT || 9001;\r\napp.listen(PORT, function() {\r\nconsole.lo('App listening on PORT ' + PORT);});",
            "functionpkg":"nondir"
        },
        {
            "path": "/",
            "type": "dir",
            "name": "views",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/views",
            "type": ".handlebars",
            "name": "index",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path": "/views",
            "type": "dir",
            "name": "layouts",
            "append content": "",
            "functionpkg":"dir"
        },
        {
            "path": "/views/layouts",
            "type": ".handlebars",
            "name": "main",
            "append content":"<!DOCTYPE html>\r\n<html lang='en'>\r\n<head>\r\n<title>Eat-da-burger</title>\r\n<meta charset='UTF-8'><link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/css/bootstrap.min.css'/>\r\n<link rel='stylesheet' href='/assets/css/style.css' type='text/css' />\r\n</head>\r\n<body>\r\n{{{ body }}}\r\n<script src='https://code.jquery.com/jquery-3.2.1.min.js'></script>\r\n<script src='/assets/js/script.js'></script>\r\n</body>\r\n</HTML>",
            "functionpkg":"dir"
        }
    ],

    "html_constructor" : [
        {
            "path":"/",
            "type":"dir",
            "name":"assets",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path":"/",
            "type":".html",
            "name":"index",
            "append content":"",
            "functionpkg":"nondir"
        },
        {
            "path":"/assets",
            "type":"dir",
            "name":"css",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path":"/assets",
            "type":"dir",
            "name":"img",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path":"/assets",
            "type":"dir",
            "name":"js",
            "append content":"",
            "functionpkg":"dir"
        },
        {
            "path":"/assets/css",
            "type":".css",
            "name":"sytle",
            "append content":"",
            "functionpkg":"nondir"
        },
        {
            "path":"/assets/css",
            "type":".css",
            "name":"reset",
            "append content":"",
            "functionpkg":"nondir"
        },
        {
            "path":"/assets/js",
            "type":".js",
            "name":"app",
            "append content":"",
            "functionpkg":"nondir"
        }
    ],

    "bootstrap3" : [
        "<!-- Latest compiled and minified CSS -->",
        "<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' integrity='sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u' crossorigin='anonymous'>",
        "<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css' integrity='sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp' crossorigin='anonymous'>",
        "<script src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' integrity='sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa' crossorigin='anonymous'></script>"
    ],

    "bootstrap4" : [
        "<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous'>",
        "<script src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous'></script>",
        "<script src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous'></script>",
        "<script src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous'></script>"
    ],

    "bulma" : [
        "<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css'>",
        "<script defer src='https://use.fontawesome.com/releases/v5.0.7/js/all.js'></script>"
    ],

    "materialize" : [
        "<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css'>",
        "<!-- Compiled and minified JavaScript -->",
        "<script src='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js'></script>"
    ],

    "html_start" : [
        "<html lang='en'>",
        "<head>",
            "<meta charset='UTF-8'>",
            "<meta name='viewport' content='width=device-width, initial-scale=1.0'>",
            "<meta http-equiv='X-UA-Compatible' content='ie=edge'>",
            "<title>Document</title>",
        "</head>",
        "<body>",
        "\r\n",   
        "</body>",
        "</html>"
    ],

    "reset" :   [
        "html, body, div, span, applet, object, iframe,",
        "h1, h2, h3, h4, h5, h6, p, blockquote, pre,",
        "a, abbr, acronym, address, big, cite, code,",
        "del, dfn, em, img, ins, kbd, q, s, samp,",
        "small, strike, strong, sub, sup, tt, var,",
        "b, u, i, center,",
        "dl, dt, dd, ol, ul, li,",
        "fieldset, form, label, legend,",
        "table, caption, tbody, tfoot, thead, tr, th, td,",
        "article, aside, canvas, details, embed, ",
        "figure, figcaption, footer, header, hgroup,",
        "menu, nav, output, ruby, section, summary,",
        "time, mark, audio, video {",
            "margin: 0;",
            "padding: 0;",
            "border: 0;",
            "font-size: 100%;",
            "font: inherit;",
            "vertical-align: baseline;",
        "}",
        "/* HTML5 display-role reset for older browsers */",
        "article, aside, details, figcaption, figure,",
        "footer, header, hgroup, menu, nav, section {",
            "display: block;",
        "}",
        "body {",
            "line-height: 1;",
        "}",
        "ol, ul {",
            "list-style: none;",
        "}",
        "blockquote, q {",
            "quotes: none;",
        "}",
        "blockquote:before, blockquote:after,",
        "q:before, q:after {",
            "content: '';",
            "content: none;",
        "}",
        "table {",
            "border-collapse: collapse;",
            "border-spacing: 0;",
        "}"
    ],

    "ajax":[
    "var url = 'enter search URL here'+ searchTerm;",
    "$.ajax({",
        "url: url,",
        "type: 'GET',",
        "contentType: 'application/json; charset=utf-8',",
        "async: false,",
        "dataType: 'json',",
        "success: function(data, status, jqXHR) {",
            "\r\n",
        "}",
    "})"
    ],

    "nodejs":[
        {
        "path":"/",
        "type":".js",
        "name":"server"
        }
    ],

    "js_constructor":[
        {
            "this_itterator": "this.",
            "variable_itterator": " = ",
            "function_start_itterator":"this.",
            "function_end_generator":" = function(){\r\n}",
            "export":"module.exports =  ;"
        }
    ],

    "mysql":[
        {
            "path": "/",
            "type": ".sql",
            "name": "seeds",
            "db_exists":"DROP DATABASE IF EXISTS ",
            "db_create":"CREATE DATABASE ",
            "db_use":"USE ",
            "db_table": "CREATE TABLE ",
            "db_table_body":" (\r\nid INT NOT NULL AUTO_INCREMENT,\r\n);",
            "db_insert":"INSERT INTO",
            "db_vals":"VALUES ("
        }
    ],

    "express":[
        {
            "path": "/",
            "type": ".js",
            "name": "server",
            "depens": "var express = require('express');\r\nvar bodyParser = require('body-parser');\r\nvar path = require('path');",
            "app":"var app = express();\r\nvar PORT = 9001;\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());",
            "app.g0":"app.get('/', function(req, res) {\r\nres.sendFile(path.join(__dirname, ));\r\n});",
            "app.gb":"app.get('/",
            "app.gb1": "' , function(req,res){\r\n}",
            "app.p":"app.post('/",
            "app.p1":"', function(req,res){\r\n\r\nres.json(fill_in_variable)\r\n});",
            "app.l":"app.listen(PORT, function() {\r\nconsole.log('App listening on PORT ' + PORT);\r\n});"
        }
    ]

}